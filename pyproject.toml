[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
name = "sevenrad-stills"
version = "0.1.0"
description = "A Python application for extracting movies from YouTube, taking stills and reworking these stills to create unique images as part of a book exploring poetic interpretations of digital media through algorithmic transformation."
authors = [
    {name = "Anton Bossenbroek"}
]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "ffmpeg-python~=0.2.0",
    "pillow~=10.4",
    "scikit-image~=0.24.0",
    "colour-demosaicing~=0.2.0",
    "yt-dlp~=2025.10",
    "pydantic~=2.10",
    "pydantic-settings~=2.6",
    "pyyaml~=6.0",
    "click~=8.1",
    "taichi~=1.7",
]

[project.optional-dependencies]
dev = [
    "pytest~=8.3",
    "pytest-cov~=6.0",
    "ruff~=0.8.4",
    "mypy~=1.13",
    "pre-commit~=4.0",
    "types-click~=7.1",
    "types-pyyaml~=6.0",
]

[project.scripts]
sevenrad = "sevenrad_stills.cli.commands:cli"

[tool.ruff]
target-version = "py312"
line-length = 88
src = ["src/sevenrad_stills", "tests"]

[tool.ruff.lint]
select = [
    "D",      # pydocstyle
    "D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107",
    "S",      # flake8-bandit (security)
    "B",      # flake8-bugbear
    "F403",   # undefined local with import star
    "ANN",    # flake8-annotations
    "G",      # flake8-logging-format
    "T20",    # flake8-print
    "PT",     # flake8-pytest-style
    "SIM",    # flake8-simplify
    "ARG",    # flake8-unused-arguments
    "I",      # isort
    "C90",    # mccabe complexity
    "PD",     # pandas-vet
    "N",      # pep8-naming
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "PLE",    # pylint errors
    "PLR",    # pylint refactor
    "RUF",    # ruff-specific rules
]
ignore = [
    "D203",   # one-blank-line-before-class (conflicts with D211)
    "D212",   # multi-line-summary-first-line (conflicts with D213)
    "ANN101", # missing-type-self (self annotations are redundant)
    "ANN102", # missing-type-cls (cls annotations are redundant)
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "ANN", "PLR2004", "S108"]  # Allow assert, annotations, magic values, and /tmp in tests
"tests/unit/operations/test_blur_circular_performance.py" = ["S101", "ANN", "PLR2004", "S108", "T201"]  # Allow print in performance tests
"tests/unit/operations/test_band_swap_performance.py" = ["S101", "ANN", "PLR2004", "S108", "T201"]  # Allow print in performance tests
"tests/unit/operations/test_chromatic_aberration_gpu.py" = ["S101", "ANN", "PLR2004", "S108", "T201"]  # Allow print in performance tests
"tests/unit/operations/test_compression_performance.py" = ["S101", "ANN", "PLR2004", "S108", "T201"]  # Allow print in performance tests
"src/sevenrad_stills/cli/commands.py" = ["PLR0913"]  # Click commands have many options
"src/sevenrad_stills/operations/blur_circular_gpu.py" = ["ANN201", "PLR0913"]  # Taichi kernels have special signatures
"src/sevenrad_stills/operations/band_swap_gpu.py" = ["ANN201", "PLR0913"]  # Taichi kernels have special signatures
"src/sevenrad_stills/operations/chromatic_aberration_gpu.py" = ["ANN201", "PLR0913"]  # Taichi kernels have special signatures
"src/sevenrad_stills/operations/compression_gpu.py" = ["ANN201", "PLR0913"]  # Taichi kernels have special signatures
"src/sevenrad_stills/operations/compression_metal.py" = ["ANN201", "PLR0913"]  # Taichi kernels have special signatures

[tool.pytest.ini_options]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests requiring external resources",
    "mac: marks tests that only run on macOS",
]
# Exclude slow and integration tests by default
# Run with: pytest -m "slow or integration" to include them
addopts = "-v -m 'not slow and not integration'"

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"

# Ignore missing type stubs for third-party libraries without stubs
[[tool.mypy.overrides]]
module = [
    "yt_dlp.*",
    "ffmpeg.*",
    "numpy.*",
    "scipy.*",
    "skimage.*",
    "colour_demosaicing.*",
    "taichi.*",
]
ignore_missing_imports = true
follow_imports = "skip"

# Skip mypy for Taichi GPU code (Taichi's type system is incompatible with mypy)
[[tool.mypy.overrides]]
module = [
    "sevenrad_stills.operations.blur_circular_gpu",
    "sevenrad_stills.operations.band_swap_gpu",
    "sevenrad_stills.operations.chromatic_aberration_gpu",
    "sevenrad_stills.operations.compression_gpu",
    "sevenrad_stills.operations.compression_metal",
]
ignore_errors = true

[dependency-groups]
dev = [
    "pytest>=8.4.2",
]
