name: Tests

on:
  push:
    branches: [main, develop, feature/*]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: pytest (Python ${{ matrix.python-version }})
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12", "3.13"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"
          enable-cache: true

      - name: Install dependencies
        run: |
          uv venv
          uv pip install -e ".[dev]"

      - name: Run pytest
        id: pytest
        run: |
          source .venv/bin/activate
          pytest --cov=src/sevenrad_stills --cov-report=xml --cov-report=term-missing -v 2>&1 | tee pytest-output.log
        continue-on-error: true

      - name: Upload test results on failure
        if: steps.pytest.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: pytest-errors-py${{ matrix.python-version }}
          path: |
            pytest-output.log
            .coverage
            coverage.xml
          retention-days: 7

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        if: matrix.python-version == '3.12' && steps.pytest.outcome == 'success'
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Fail if tests failed
        if: steps.pytest.outcome == 'failure'
        run: exit 1
